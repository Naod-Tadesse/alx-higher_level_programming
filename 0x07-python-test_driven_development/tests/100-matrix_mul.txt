test cases for matrix multiplication task
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul(424, [[4, 2], [7, 6]])
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> matrix_mul([[1, 3], [2, 4]], "a string")
Traceback (most recent call last):
...
TypeError: m_b must be a list
>>> matrix_mul([[4, 7, 8], [3, 5, 1]], [[1, 8], [4, 10], [1, 12]])
[[40, 198], [24, 86]]
>>> matrix_mul([], [[8, 41], [5, 9]])
Traceback (most recent call last):
...
TypeError: m_a can't be empty

>>> matrix_mul([[6, 3], [1, 6]], [[3, 3, 8], [9, 1]])
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size
>>> matrix_mul([[8, 41], [5, 9]], [])
Traceback (most recent call last):
...
TypeError: m_b can't be empty
>>> matrix_mul([[6, 3], [1, 'p']], [[3, 8], [9, 1]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[6, 3], [1, 6, 1]], [[3, 8], [9, 1]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size
